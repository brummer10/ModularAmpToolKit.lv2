
// epiphone_jr_out_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.400000
 // --table_div  1.994358
 // --table_op  1.000000

struct tableepiphone_jr_out_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableepiphone_jr_out_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableepiphone_jr_out_neg&() const { return *(tableepiphone_jr_out_neg*)this; }
};

 static tableepiphone_jr_out_neg_imp<200> epiphone_jr_out_neg_table __rt_data = {
	0,-0.828539,142.143,200, {
	0.000000000000,-0.004207660178,-0.008414883965,-0.012620608852,-0.016828795125,
	-0.021034273929,-0.025239342332,-0.029445877807,-0.033650438662,-0.037855076700,
	-0.042058416727,-0.046262745844,-0.050466893510,-0.054669821020,-0.058872493749,
	-0.063074814026,-0.067276984227,-0.071477594107,-0.075678778385,-0.079879731742,
	-0.084080088797,-0.088281169595,-0.092480287960,-0.096678774283,-0.100877975842,
	-0.105075266292,-0.109274759479,-0.113470785598,-0.117669228989,-0.121865741597,
	-0.126061646813,-0.130258234094,-0.134453295450,-0.138648820661,-0.142843514782,
	-0.147036573266,-0.151231055407,-0.155425155691,-0.159616718180,-0.163810168722,
	-0.168002370241,-0.172194569251,-0.176385513358,-0.180578094837,-0.184766748880,
	-0.188956428963,-0.193147981397,-0.197336373538,-0.201525183785,-0.205713565565,
	-0.209900934950,-0.214089655713,-0.218276339529,-0.222462781231,-0.226649787292,
	-0.230835570598,-0.235020347448,-0.239204479663,-0.243388954831,-0.247572989681,
	-0.251758517798,-0.255941271623,-0.260123975365,-0.264305082682,-0.268487252288,
	-0.272668662923,-0.276849383669,-0.281030612692,-0.285209724755,-0.289389465328,
	-0.293568208259,-0.297747102622,-0.301925302953,-0.306102869754,-0.310279822493,
	-0.314458183552,-0.318634161414,-0.322809564441,-0.326985416044,-0.331160431142,
	-0.335334457939,-0.339509075944,-0.343682140677,-0.347855344438,-0.352028195572,
	-0.356200083153,-0.360372364033,-0.364543104364,-0.368715034383,-0.372883772587,
	-0.377055414742,-0.381223617642,-0.385393941035,-0.389561893781,-0.393730194616,
	-0.397897554664,-0.402063688936,-0.406230634219,-0.410397203118,-0.414561723454,
	-0.418727550104,-0.422891502842,-0.427055117487,-0.431220119234,-0.435383151294,
	-0.439546323462,-0.443707692816,-0.447869392104,-0.452029969578,-0.456192359222,
	-0.460351767585,-0.464511216211,-0.468670948644,-0.472829198010,-0.476987129875,
	-0.481145749337,-0.485302689368,-0.489459294663,-0.493615574795,-0.497772362503,
	-0.501926636144,-0.506081415348,-0.510236821121,-0.514390093706,-0.518544055974,
	-0.522696450945,-0.526848253773,-0.531000172032,-0.535151081631,-0.539301817603,
	-0.543453145060,-0.547601312955,-0.551750199369,-0.555898575405,-0.560047520090,
	-0.564196588699,-0.568342493629,-0.572489892425,-0.576635888431,-0.580781337240,
	-0.584926099138,-0.589070785852,-0.593213967567,-0.597358863648,-0.601500929518,
	-0.605643719686,-0.609784943928,-0.613927732345,-0.618067714249,-0.622209286201,
	-0.626347495804,-0.630488620653,-0.634626086184,-0.638764512684,-0.642902101118,
	-0.647039880137,-0.651175992058,-0.655311727885,-0.659447191288,-0.663582833355,
	-0.667716970335,-0.671851833671,-0.675984454969,-0.680117353419,-0.684250635302,
	-0.688383333170,-0.692513260527,-0.696644585755,-0.700774820559,-0.704904513594,
	-0.709033375524,-0.713162269661,-0.717290292649,-0.721418344984,-0.725544672839,
	-0.729671202648,-0.733797647278,-0.737922725834,-0.742046692630,-0.746171448329,
	-0.750295267342,-0.754418250214,-0.758540403586,-0.762662006479,-0.766783993636,
	-0.770904664511,-0.775025575122,-0.779144861055,-0.783263793340,-0.787382618409,
	-0.791501701338,-0.795618178439,-0.799736140123,-0.803852817761,-0.807968063016,
	-0.812083117947,-0.816198552795,-0.820312344767,-0.824425614293,-0.828539274403
	}
};

double always_inline epiphone_jr_out_negclip(double x) {
    double f = fabs(x);
    f = f * epiphone_jr_out_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = epiphone_jr_out_neg_table.data[0];
    } else if (i >= epiphone_jr_out_neg_table.size-1) {
        f = epiphone_jr_out_neg_table.data[epiphone_jr_out_neg_table.size-1];
    } else {
    f -= i;
    f = epiphone_jr_out_neg_table.data[i]*(1-f) + epiphone_jr_out_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}


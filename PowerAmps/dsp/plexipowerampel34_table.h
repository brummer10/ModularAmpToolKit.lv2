
// plexipowerampel34_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  1.684552
 // --table_op  1.000000

struct tableplexipowerampel34 { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableplexipowerampel34_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableplexipowerampel34&() const { return *(tableplexipowerampel34*)this; }
};

 static tableplexipowerampel34_imp<200> plexipowerampel34_table __rt_data = {
	0,0.833333,142.143,200, {
	0.000000000000,0.008825069056,0.017581566729,0.026269903187,0.034890465555,
	0.043443658654,0.051929868850,0.060349505962,0.068702951545,0.076990613410,
	0.085212874669,0.093370128103,0.101462771605,0.109491192293,0.117455779277,
	0.125356920917,0.133195001455,0.140970418466,0.148683539107,0.156334761409,
	0.163924456272,0.171453013208,0.178920811925,0.186328222432,0.193675625016,
	0.200963407969,0.208191932778,0.215361567217,0.222472697993,0.229525680172,
	0.236520901792,0.243458710457,0.250339474548,0.257163569576,0.263931348881,
	0.270643177811,0.277299409324,0.283900407919,0.290446529521,0.296938122771,
	0.303375546946,0.309759151256,0.316089285597,0.322366298196,0.328590535608,
	0.334762342540,0.340882060475,0.346950036585,0.352966603290,0.358932104243,
	0.364846877639,0.370711249622,0.376525560168,0.382290140574,0.388005315775,
	0.393671416942,0.399288772025,0.404857702297,0.410378536938,0.415851589047,
	0.421277181468,0.426655631817,0.431987254468,0.437272366677,0.442511279324,
	0.447704303409,0.452851747777,0.457953921154,0.463011125387,0.468023669161,
	0.472991851195,0.477915974277,0.482796332150,0.487633229188,0.492426956125,
	0.497177807362,0.501886073846,0.506552046948,0.511176018334,0.515758270335,
	0.520299087251,0.524798755416,0.529257556663,0.533675768918,0.538053670789,
	0.542391540684,0.546689653613,0.550948279398,0.555167696010,0.559348168034,
	0.563489964912,0.567593355127,0.571658603749,0.575685970920,0.579675724258,
	0.583628117736,0.587543414507,0.591421871735,0.595263740340,0.599069279141,
	0.602838737759,0.606572367383,0.610270417096,0.613933134590,0.617560765687,
	0.621153554917,0.624711744403,0.628235577388,0.631725291806,0.635181126584,
	0.638603318260,0.641992102801,0.645347712765,0.648670379716,0.651960337348,
	0.655217812543,0.658443033155,0.661636227511,0.664797617402,0.667927428210,
	0.671025880875,0.674093197740,0.677129595125,0.680135293039,0.683110506168,
	0.686055448937,0.688970336972,0.691855380478,0.694710790096,0.697536776369,
	0.700333545446,0.703101305038,0.705840260675,0.708550614229,0.711232569274,
	0.713886327661,0.716512088070,0.719110049659,0.721680408531,0.724223361618,
	0.726739103475,0.729227826292,0.731689723008,0.734124984098,0.736533798639,
	0.738916355468,0.741272841367,0.743603441274,0.745908340423,0.748187722027,
	0.750441767742,0.752670657655,0.754874572657,0.757053690735,0.759208188412,
	0.761338242823,0.763444027128,0.765525716623,0.767583483045,0.769617497350,
	0.771627930340,0.773614950578,0.775578726418,0.777519424545,0.779437210341,
	0.781332248371,0.783204701796,0.785054734023,0.786882505198,0.788688175562,
	0.790471904966,0.792233850299,0.793974169490,0.795693018007,0.797390550199,
	0.799066920924,0.800722281709,0.802356785430,0.803970581781,0.805563820995,
	0.807136651706,0.808689221322,0.810221676641,0.811734163187,0.813226825850,
	0.814699808290,0.816153253063,0.817587302265,0.819002096686,0.820397775366,
	0.821774478216,0.823132342882,0.824471506335,0.825792104528,0.827094272846,
	0.828378145433,0.829643855964,0.830891536387,0.832121318561,0.833333333339
	}
};

double always_inline plexipowerampel34clip(double x) {
    double f = fabs(x);
    f = f * plexipowerampel34_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = plexipowerampel34_table.data[0];
    } else if (i >= plexipowerampel34_table.size-1) {
        f = plexipowerampel34_table.data[plexipowerampel34_table.size-1];
    } else {
    f -= i;
    f = plexipowerampel34_table.data[i]*(1-f) + plexipowerampel34_table.data[i+1]*f;
    }
    return copysign(f, x);
}


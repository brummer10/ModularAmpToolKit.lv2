
// tweedchamp_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.400000
 // --table_div  17.145955
 // --table_op  1.000000

struct tabletweedchamp_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tabletweedchamp_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tabletweedchamp_neg&() const { return *(tabletweedchamp_neg*)this; }
};

 static tabletweedchamp_neg_imp<200> tweedchamp_neg_table __rt_data = {
	0,-1.19712,142.143,200, {
	0.000000000000,-0.006114241304,-0.012229300278,-0.018345122124,-0.024461652625,
	-0.030578838972,-0.036696629554,-0.042814973920,-0.048933822749,-0.055053127815,
	-0.061172841955,-0.067292919040,-0.073413313942,-0.079533982510,-0.085654881535,
	-0.091775968732,-0.097897202705,-0.104018542927,-0.110139949712,-0.116261384197,
	-0.122382808311,-0.128504184757,-0.134625476992,-0.140746649201,-0.146867666282,
	-0.152988493821,-0.159109098077,-0.165229445962,-0.171349505021,-0.177469243417,
	-0.183588629915,-0.189707633861,-0.195826225170,-0.201944374309,-0.208062052283,
	-0.214179230618,-0.220295881350,-0.226411977007,-0.232527490600,-0.238642395608,
	-0.244756665964,-0.250870276044,-0.256983200656,-0.263095415028,-0.269206894794,
	-0.275317615987,-0.281427555024,-0.287536688702,-0.293644994179,-0.299752448972,
	-0.305859030943,-0.311964718293,-0.318069489549,-0.324173323556,-0.330276199475,
	-0.336378096761,-0.342478995173,-0.348578874744,-0.354677715793,-0.360775498910,
	-0.366872204946,-0.372967815005,-0.379062310447,-0.385155672867,-0.391247884100,
	-0.397338926208,-0.403428781477,-0.409517432411,-0.415604861715,-0.421691052314,
	-0.427775987316,-0.433859650032,-0.439942023954,-0.446023092765,-0.452102840315,
	-0.458181250628,-0.464258307898,-0.470333996479,-0.476408300878,-0.482481205763,
	-0.488552695935,-0.494622756352,-0.500691372104,-0.506758528412,-0.512824210633,
	-0.518888404245,-0.524951094851,-0.531012268165,-0.537071910020,-0.543130006357,
	-0.549186543223,-0.555241506766,-0.561294883231,-0.567346658959,-0.573396820384,
	-0.579445354022,-0.585492246479,-0.591537484437,-0.597581054657,-0.603622943974,
	-0.609663139294,-0.615701627591,-0.621738395899,-0.627773431319,-0.633806721007,
	-0.639838252174,-0.645868012083,-0.651895988046,-0.657922167423,-0.663946537615,
	-0.669969086063,-0.675989800247,-0.682008667682,-0.688025675912,-0.694040812512,
	-0.700054065082,-0.706065421247,-0.712074868653,-0.718082394961,-0.724087987852,
	-0.730091635015,-0.736093324151,-0.742093042969,-0.748090779182,-0.754086520504,
	-0.760080254651,-0.766071969335,-0.772061652259,-0.778049291121,-0.784034873608,
	-0.790018387389,-0.795999820124,-0.801979159446,-0.807956392974,-0.813931508295,
	-0.819904492976,-0.825875334551,-0.831844020522,-0.837810538356,-0.843774875485,
	-0.849737019296,-0.855696957136,-0.861654676306,-0.867610164060,-0.873563407596,
	-0.879514394063,-0.885463110550,-0.891409544085,-0.897353681638,-0.903295510109,
	-0.909235016331,-0.915172187064,-0.921107008997,-0.927039468735,-0.932969552809,
	-0.938897247662,-0.944822539651,-0.950745415573,-0.956665860007,-0.962583860621,
	-0.968499402860,-0.974412472595,-0.980323055588,-0.986231137493,-0.992136703848,
	-0.998039740072,-1.003940231463,-1.009838163191,-1.015733520298,-1.021626287693,
	-1.027516450144,-1.033403992278,-1.039288898579,-1.045171153374,-1.051050740840,
	-1.056927644991,-1.062801849681,-1.068673338588,-1.074542095222,-1.080408102912,
	-1.086271344802,-1.092131803847,-1.097989462809,-1.103844304249,-1.109696310521,
	-1.115545463768,-1.121391745916,-1.127235138668,-1.133075623496,-1.138913181635,
	-1.144747794079,-1.150579441571,-1.156408104598,-1.162233763383,-1.168056397877,
	-1.173875987752,-1.179692512396,-1.185505950899,-1.191316282049,-1.197123484322
	}
};

double always_inline tweedchamp_negclip(double x) {
    double f = fabs(x);
    f = f * tweedchamp_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = tweedchamp_neg_table.data[0];
    } else if (i >= tweedchamp_neg_table.size-1) {
        f = tweedchamp_neg_table.data[tweedchamp_neg_table.size-1];
    } else {
    f -= i;
    f = tweedchamp_neg_table.data[i]*(1-f) + tweedchamp_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}


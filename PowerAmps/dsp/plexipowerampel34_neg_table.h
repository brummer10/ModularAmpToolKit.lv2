
// plexipowerampel34_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.400000
 // --table_div  1.684552
 // --table_op  1.000000

struct tableplexipowerampel34_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableplexipowerampel34_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableplexipowerampel34_neg&() const { return *(tableplexipowerampel34_neg*)this; }
};

 static tableplexipowerampel34_neg_imp<200> plexipowerampel34_neg_table __rt_data = {
	0,-0.830434,142.143,200, {
	0.000000000000,-0.008825166416,-0.017581955846,-0.026270748592,-0.034891927952,
	-0.043445895020,-0.051933028482,-0.060353713507,-0.068708344701,-0.076997279049,
	-0.085220920211,-0.093379650456,-0.101473847974,-0.109503893701,-0.117470170243,
	-0.125373053511,-0.133212915640,-0.140990142782,-0.148705110523,-0.156358185222,
	-0.163949749539,-0.171480173168,-0.178949827852,-0.186359083790,-0.193708313082,
	-0.200997875893,-0.208228144469,-0.215399491663,-0.222512266704,-0.229566845140,
	-0.236563578802,-0.243502835296,-0.250384971175,-0.257210346178,-0.263979312312,
	-0.270692226415,-0.277349439820,-0.283951308672,-0.290498183437,-0.296990409097,
	-0.303428333067,-0.309812303564,-0.316142669098,-0.322419766753,-0.328643940091,
	-0.334815528853,-0.340934871940,-0.347002303943,-0.353018165786,-0.358982786115,
	-0.364896496770,-0.370759633766,-0.376572522445,-0.382335485534,-0.388048858784,
	-0.393712957996,-0.399328110793,-0.404894638133,-0.410412854580,-0.415883084307,
	-0.421305640058,-0.426680833592,-0.432008982476,-0.437290395884,-0.442525383943,
	-0.447714254521,-0.452857313789,-0.457954866525,-0.463007216132,-0.468014664763,
	-0.472977507652,-0.477896050270,-0.482770585254,-0.487601405460,-0.492388805190,
	-0.497133080728,-0.501834519752,-0.506493405025,-0.511110032103,-0.515684679743,
	-0.520217632509,-0.524709174236,-0.529159583293,-0.533569140304,-0.537938122341,
	-0.542266803832,-0.546555456680,-0.550804357015,-0.555013770934,-0.559183972674,
	-0.563315225583,-0.567407798699,-0.571461954073,-0.575477954408,-0.579456063283,
	-0.583396537818,-0.587299636289,-0.591165618130,-0.594994733142,-0.598787239769,
	-0.602543387137,-0.606263425611,-0.609947605378,-0.613596173718,-0.617209375000,
	-0.620787454324,-0.624330653787,-0.627839216646,-0.631313380725,-0.634753384965,
	-0.638159466288,-0.641531860042,-0.644870800713,-0.648176518840,-0.651449247993,
	-0.654689215377,-0.657896650703,-0.661071779722,-0.664214829073,-0.667326020581,
	-0.670405579210,-0.673453722176,-0.676470673651,-0.679456649217,-0.682411864733,
	-0.685336538825,-0.688230882515,-0.691095111078,-0.693929432606,-0.696734060342,
	-0.699509202616,-0.702255064375,-0.704971855016,-0.707659775910,-0.710319032607,
	-0.712949825521,-0.715552356630,-0.718126825518,-0.720673430658,-0.723192367252,
	-0.725683832057,-0.728148019865,-0.730585122627,-0.732995333386,-0.735378842133,
	-0.737735837986,-0.740066509107,-0.742371043092,-0.744649624698,-0.746902439379,
	-0.749129669401,-0.751331497574,-0.753508104803,-0.755659670110,-0.757786372384,
	-0.759888389373,-0.761965897374,-0.764019070360,-0.766048083130,-0.768053108124,
	-0.770034317048,-0.771991880375,-0.773925967602,-0.775836746544,-0.777724384911,
	-0.779589048241,-0.781430901838,-0.783250109603,-0.785046833823,-0.786821236559,
	-0.788573478626,-0.790303719548,-0.792012117675,-0.793698830218,-0.795364014068,
	-0.797007824406,-0.798630415730,-0.800231941079,-0.801812553473,-0.803372403455,
	-0.804911641427,-0.806430417283,-0.807928878875,-0.809407173790,-0.810865448057,
	-0.812303847251,-0.813722516074,-0.815121597513,-0.816501234517,-0.817861568263,
	-0.819202739722,-0.820524888245,-0.821828152919,-0.823112671327,-0.824378580512,
	-0.825626016395,-0.826855114143,-0.828066007852,-0.829258831036,-0.830433715874
	}
};

double always_inline plexipowerampel34_negclip(double x) {
    double f = fabs(x);
    f = f * plexipowerampel34_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = plexipowerampel34_neg_table.data[0];
    } else if (i >= plexipowerampel34_neg_table.size-1) {
        f = plexipowerampel34_neg_table.data[plexipowerampel34_neg_table.size-1];
    } else {
    f -= i;
    f = plexipowerampel34_neg_table.data[i]*(1-f) + plexipowerampel34_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}


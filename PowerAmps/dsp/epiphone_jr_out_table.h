
// epiphone_jr_out_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  1.994358
 // --table_op  1.000000

struct tableepiphone_jr_out { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableepiphone_jr_out_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableepiphone_jr_out&() const { return *(tableepiphone_jr_out*)this; }
};

 static tableepiphone_jr_out_imp<200> epiphone_jr_out_table __rt_data = {
	0,0.833333,142.143,200, {
	0.000000000000,0.004207780834,0.008415331228,0.012623355635,0.016830953749,
	0.021036985485,0.025245045762,0.029450827693,0.033658132690,0.037864553901,
	0.042071092995,0.046277488171,0.050483739723,0.054690110194,0.058896559044,
	0.063102602600,0.067307277588,0.071512066168,0.075718916182,0.079924856667,
	0.084127684885,0.088333816190,0.092539073091,0.096742651774,0.100947320530,
	0.105151622358,0.109355191307,0.113559698795,0.117762969373,0.121967117113,
	0.126169032767,0.130373635184,0.134575967675,0.138779173256,0.142983002691,
	0.147184862570,0.151387851006,0.155589845872,0.159791469971,0.163993364567,
	0.168194831732,0.172397235087,0.176599760193,0.180799870011,0.185001215543,
	0.189201293286,0.193401939313,0.197604077570,0.201804101610,0.206004000296,
	0.210203952553,0.214404848691,0.218603577493,0.222804393120,0.227001309461,
	0.231199764132,0.235399437413,0.239597194214,0.243796485112,0.247995233688,
	0.252192751351,0.256388564163,0.260589944733,0.264785102753,0.268983471485,
	0.273180190090,0.277377345641,0.281572232828,0.285770080587,0.289963971606,
	0.294162313122,0.298357866892,0.302553133967,0.306749098634,0.310944020349,
	0.315138981727,0.319333688266,0.323529478736,0.327722246891,0.331916683341,
	0.336111457665,0.340303894732,0.344498277101,0.348691246596,0.352882666495,
	0.357075786869,0.361268299061,0.365461580644,0.369654295081,0.373846176531,
	0.378037830226,0.382228641856,0.386419834498,0.390610442613,0.394802458348,
	0.398989754899,0.403181927539,0.407371329054,0.411560800018,0.415751657894,
	0.419941560390,0.424131313701,0.428317929075,0.432506788239,0.436695462610,
	0.440885547753,0.445070091668,0.449259796005,0.453446420223,0.457632563686,
	0.461822471348,0.466008072299,0.470194405546,0.474379537781,0.478566787590,
	0.482751792341,0.486935998017,0.491122263523,0.495307391191,0.499490927191,
	0.503676320730,0.507860395099,0.512043813712,0.516226337624,0.520409296161,
	0.524595509919,0.528774032933,0.532958893737,0.537141555261,0.541324969467,
	0.545504513048,0.549687315235,0.553867076442,0.558048235054,0.562228136544,
	0.566408461103,0.570589630718,0.574768701993,0.578949614113,0.583126707763,
	0.587306357012,0.591485865613,0.595662250987,0.599842972755,0.604018196753,
	0.608198659654,0.612374069087,0.616550590002,0.620726819493,0.624903632707,
	0.629078593315,0.633255564149,0.637431022863,0.641606680130,0.645783192011,
	0.649958120587,0.654131259555,0.658305340740,0.662479032026,0.666650899265,
	0.670825310122,0.674997277192,0.679170269966,0.683342039767,0.687515196538,
	0.691684397912,0.695856480180,0.700028377729,0.704199079826,0.708370251573,
	0.712540336646,0.716710894754,0.720877519763,0.725048720769,0.729216281530,
	0.733384796868,0.737551760583,0.741721365091,0.745887639121,0.750055732005,
	0.754222969354,0.758388401685,0.762554230422,0.766718055426,0.770885357948,
	0.775051568659,0.779218697115,0.783383354815,0.787545519025,0.791711171828,
	0.795875353502,0.800036503755,0.804201696700,0.808364367888,0.812526704748,
	0.816688705982,0.820849520229,0.825010316278,0.829170445365,0.833333333348
	}
};

double always_inline epiphone_jr_outclip(double x) {
    double f = fabs(x);
    f = f * epiphone_jr_out_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = epiphone_jr_out_table.data[0];
    } else if (i >= epiphone_jr_out_table.size-1) {
        f = epiphone_jr_out_table.data[epiphone_jr_out_table.size-1];
    } else {
    f -= i;
    f = epiphone_jr_out_table.data[i]*(1-f) + epiphone_jr_out_table.data[i+1]*f;
    }
    return copysign(f, x);
}

